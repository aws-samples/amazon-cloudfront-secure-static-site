AWSTemplateFormatVersion: '2010-09-09'
Description: ACFS3 - Cert Provider with DNS validation
Transform: AWS::Serverless-2016-10-31


Resources:
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt CFNCustomProvider.Arn
      Principal: !GetAtt LambdaRole.Arn

  LambdaPolicy:
    Type: AWS::IAM::Policy
    DependsOn:
      - LambdaRole
    Properties:
      PolicyName: CFNCertificateDomainResourceRecordProvider
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - acm:RequestCertificate
              - acm:DescribeCertificate
              - acm:UpdateCertificateOptions
              - acm:DeleteCertificate
            Resource:
            - '*'
          - Effect: Allow
            Action:
              - logs:*
            Resource: arn:aws:logs:*:*:*
      Roles:
        - !Ref LambdaRole

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      Tags:
        - Key: Solution
          Value: ACFS3

  CFNCustomProviderLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
      LogGroupName: !Sub '/aws/lambda/${CFNCustomProvider}'
    DependsOn:
      - CFNCustomProvider

  CFNCustomProvider:
    Type: AWS::Lambda::Function
    Properties:
      Code: 
        S3Bucket: !Sub 'binxio-public-${AWS::Region}'
        S3Key: 'lambdas/cfn-certificate-provider-0.2.4.zip'
      Description: CFN Certificate Domain Resource Record Provider
      MemorySize: 128
      Handler: provider.handler
      Timeout: 300
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.8

  S3BucketLogs:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: LogDeliveryWrite
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: Solution
          Value: ACFS3

  S3BucketRoot:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LoggingConfiguration:
        DestinationBucketName: !Ref 'S3BucketLogs'
        LogFilePrefix: 'origin/'
      Tags:
        - Key: Solution
          Value: ACFS3
  
  CopyLayerVersion:
    Type: "AWS::Serverless::LayerVersion"
    Properties:
      ContentUri: ../witch.zip
      CompatibleRuntimes:
        - nodejs12.x

  CopyRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyName: S3CopyPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:ListBucket
            - s3:PutObject
            - s3:PutObjectAcl
            Resource:
              - !Sub
                - arn:aws:s3:::${TargetBucket}/*
                - TargetBucket: !Ref S3BucketRoot
              - !Sub
                - arn:aws:s3:::${TargetBucket}
                - TargetBucket: !Ref S3BucketRoot


  CopyFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../www
      Environment:
        Variables:
          BUCKET: !Ref S3BucketRoot
      Handler: witch.staticHandler
      Layers:
        - !Ref CopyLayerVersion
      Role: !GetAtt CopyRole.Arn
      Runtime: nodejs12.x
      Timeout: 300

Outputs:
  S3BucketRoot:
    Description: Website bucket
    Value: !Ref S3BucketRoot
  S3BucketRootName:
    Description: Website bucket name
    Value: !GetAtt S3BucketRoot.DomainName
  S3BucketRootArn:
    Description: Website bucket locator
    Value: !GetAtt S3BucketRoot.Arn
  S3BucketLogs:
    Description: Logging bucket
    Value: !Ref S3BucketLogs
  S3BucketLogsName:
    Description: Logging bucket Name
    Value: !GetAtt S3BucketLogs.DomainName
  CFNCustomProvider:
    Description: ACM helper function
    Value: !GetAtt CFNCustomProvider.Arn
  CopyFunction:
    Description: S3 helper function
    Value: !GetAtt CopyFunction.Arn

